package edu.colostate.cs414.d.pizza.ui;

import edu.colostate.cs414.d.pizza.Kiosk;
import edu.colostate.cs414.d.pizza.api.order.Order;
import edu.colostate.cs414.d.pizza.api.order.OrderStatus;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SpinnerNumberModel;
import javax.swing.WindowConstants;

public class PaymentDialog extends javax.swing.JDialog {

    
        private final Kiosk kiosk;
        private Order order;
        private double total;
        
        public PaymentDialog(Frame parent, Kiosk kiosk, Order order, Double total) {
		super(parent, true);
		initComponents();
		
		setLocationRelativeTo(parent);
                this.kiosk = kiosk;
                this.order = order;
                this.total = total;
                totalDueCash.setText(String.format("$%.2f", total));
                creditTotalDue.setText(String.format("$%.2f", total));
                checkTotal.setText(String.format("$%.2f", total));
	}
        
        public PaymentDialog(JDialog parent, Kiosk kiosk, Order order, Double total) {
		super(parent, true);
		initComponents();
		
		setLocationRelativeTo(parent);
                this.kiosk = kiosk;
                this.order = order;
                this.total = total;
                totalDueCash.setText(String.format("$%.2f", total));
                creditTotalDue.setText(String.format("$%.2f", total));
                checkTotal.setText(String.format("$%.2f", total));
	}
        
        private void error(String message) {
            JOptionPane.showMessageDialog(
                this, message, "Error",
                JOptionPane.ERROR_MESSAGE);
        }

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new JTextField();
        totalField = new JLabel();
        totalLabel = new JLabel();
        totalField1 = new JLabel();
        totalLabel1 = new JLabel();
        jPanel4 = new JPanel();
        jPanel5 = new JPanel();
        jTextField1 = new JTextField();
        jSpinner1 = new JSpinner();
        jSpinner3 = new JSpinner();
        jTabbedPane1 = new JTabbedPane();
        jPanel2 = new JPanel();
        jLabel15 = new JLabel();
        totalDueCash = new JLabel();
        jLabel16 = new JLabel();
        cashSubmit = new JButton();
        cashTotalGiven = new JSpinner();
        jPanel1 = new JPanel();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        creditCardNumber = new JTextField();
        jLabel3 = new JLabel();
        creditSecurityCode = new JTextField();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        creditCardName = new JTextField();
        creditBillingAddress = new JTextField();
        creditTotalDue = new JLabel();
        creditCity = new JTextField();
        jLabel7 = new JLabel();
        creditMonthExpiration = new JComboBox();
        creditYearExpiration = new JComboBox();
        jLabel9 = new JLabel();
        creditZipCode = new JTextField();
        creditSubmit = new JButton();
        jPanel3 = new JPanel();
        jLabel8 = new JLabel();
        checkTotal = new JLabel();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        jLabel12 = new JLabel();
        jLabel13 = new JLabel();
        checkName = new JTextField();
        checkAccountNumber = new JTextField();
        checkRouting = new JTextField();
        checkNumber = new JTextField();
        checkSubmit = new JButton();
        jLabel18 = new JLabel();
        checkTotalGiven = new JSpinner();

        jTextField5.setText("jTextField5");

        totalField.setText("$0.00");

        totalLabel.setText("Total:");

        totalField1.setText("$0.00");

        totalLabel1.setText("Total:");

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        GroupLayout jPanel5Layout = new GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(jPanel5Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setToolTipText("");

        jLabel15.setText("Total Due");

        totalDueCash.setText("$0.00");

        jLabel16.setText("Total Given");

        cashSubmit.setIcon(new ImageIcon(getClass().getResource("/edu/colostate/cs414/d/pizza/ui/okay.png"))); // NOI18N
        cashSubmit.setText("Submit Payment");
        cashSubmit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cashSubmitActionPerformed(evt);
            }
        });

        cashTotalGiven.setModel(new SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16, GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cashTotalGiven, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(cashSubmit)
                            .addComponent(totalDueCash))
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(totalDueCash))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(cashTotalGiven, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cashSubmit)
                .addContainerGap(288, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cash", jPanel2);

        jLabel1.setText("Credit Card Number");

        jLabel2.setText("Security Code");

        creditCardNumber.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditCardNumberActionPerformed(evt);
            }
        });

        jLabel3.setText("Expiration Date");

        creditSecurityCode.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditSecurityCodeActionPerformed(evt);
            }
        });

        jLabel4.setText("Billing Address");

        jLabel5.setText("Total Due");

        jLabel6.setText("Card Holder Name");

        creditCardName.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditCardNameActionPerformed(evt);
            }
        });

        creditBillingAddress.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditBillingAddressActionPerformed(evt);
            }
        });

        creditTotalDue.setText("$0.00");

        creditCity.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditCityActionPerformed(evt);
            }
        });

        jLabel7.setText("City");

        creditMonthExpiration.setModel(new DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        creditMonthExpiration.setAlignmentX(0.0F);
        creditMonthExpiration.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditMonthExpirationActionPerformed(evt);
            }
        });

        creditYearExpiration.setModel(new DefaultComboBoxModel(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034" }));
        creditYearExpiration.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditYearExpirationActionPerformed(evt);
            }
        });

        jLabel9.setText("Zip Code");

        creditZipCode.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditZipCodeActionPerformed(evt);
            }
        });

        creditSubmit.setIcon(new ImageIcon(getClass().getResource("/edu/colostate/cs414/d/pizza/ui/okay.png"))); // NOI18N
        creditSubmit.setText("Submit Payment");
        creditSubmit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                creditSubmitActionPerformed(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(creditTotalDue))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(creditZipCode)
                    .addComponent(creditCardNumber)
                    .addComponent(creditBillingAddress)
                    .addComponent(creditCity)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(creditMonthExpiration, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditYearExpiration, GroupLayout.PREFERRED_SIZE, 82, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addComponent(creditSecurityCode, GroupLayout.Alignment.TRAILING)
                    .addComponent(creditCardName, GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(creditSubmit)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(creditTotalDue))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(creditCardName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(creditCardNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(creditSecurityCode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(creditMonthExpiration, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(creditYearExpiration, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(creditBillingAddress, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(creditCity, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(creditZipCode, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addComponent(creditSubmit)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Credit", jPanel1);

        jLabel8.setText("Total Due");

        checkTotal.setText("$0.00");

        jLabel10.setText("Name");

        jLabel11.setText("Account Number");

        jLabel12.setText("Routing Number");

        jLabel13.setText("Check Number");

        checkName.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                checkNameActionPerformed(evt);
            }
        });

        checkAccountNumber.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                checkAccountNumberActionPerformed(evt);
            }
        });

        checkRouting.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                checkRoutingActionPerformed(evt);
            }
        });

        checkNumber.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                checkNumberActionPerformed(evt);
            }
        });

        checkSubmit.setIcon(new ImageIcon(getClass().getResource("/edu/colostate/cs414/d/pizza/ui/okay.png"))); // NOI18N
        checkSubmit.setText("Submit Payment");
        checkSubmit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                checkSubmitActionPerformed(evt);
            }
        });

        jLabel18.setText("Total Given");

        checkTotalGiven.setModel(new SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(checkNumber, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(checkAccountNumber, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkName, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkRouting, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(checkTotalGiven, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(checkTotal)
                        .addGap(0, 190, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(checkSubmit)
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(checkTotal))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(checkName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(checkAccountNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(checkRouting, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(checkNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(checkTotalGiven, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkSubmit)
                .addContainerGap(104, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Check", jPanel3);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, GroupLayout.PREFERRED_SIZE, 349, GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creditSecurityCodeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditSecurityCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditSecurityCodeActionPerformed

    private void creditCardNumberActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditCardNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditCardNumberActionPerformed

    private void jTextField1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void creditCardNameActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditCardNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditCardNameActionPerformed

    private void creditBillingAddressActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditBillingAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditBillingAddressActionPerformed

    private void creditCityActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditCityActionPerformed

    private void creditMonthExpirationActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditMonthExpirationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditMonthExpirationActionPerformed

    private void creditYearExpirationActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditYearExpirationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditYearExpirationActionPerformed

    private void creditZipCodeActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creditZipCodeActionPerformed

    private void checkNameActionPerformed(ActionEvent evt) {//GEN-FIRST:event_checkNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkNameActionPerformed

    private void checkAccountNumberActionPerformed(ActionEvent evt) {//GEN-FIRST:event_checkAccountNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAccountNumberActionPerformed

    private void checkRoutingActionPerformed(ActionEvent evt) {//GEN-FIRST:event_checkRoutingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkRoutingActionPerformed

    private void checkNumberActionPerformed(ActionEvent evt) {//GEN-FIRST:event_checkNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkNumberActionPerformed

    private void checkSubmitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_checkSubmitActionPerformed
        double totalGiven = (double) checkTotalGiven.getValue();
        if(checkName.getText().isEmpty()){
            error("Name must be entered in from check");
            return;
        }
        
        if(checkNumber.getText().isEmpty()){
            error("Check Number must be entered in from check");
            return;
        }
        
        if(!isNumber(checkNumber.getText())){
            error("Check Number must be zero or above");
            return;
        }
        
        if(checkRouting.getText().isEmpty()){
            error("Check Routing Number must be entered in from check");
            return;
        }
        
        if(!isNumber(checkRouting.getText()) || checkRouting.getText().length() != 9){
            error("Check routing number from check must be all numbers and a length of 9 digits");
            return;
        }
        
        if(totalGiven <= 0){
            error("Check total from check must bigger than 0");
            return;
        }
        
        if(totalGiven < this.total){
            error("Check total not enough for the total");
            return;
        }
        
        if(checkAccountNumber.getText().isEmpty()){
            error("Check Account number must be entered in from check");
            return;
        }
        
        if(!isNumber(checkAccountNumber.getText()) || checkAccountNumber.getText().length() < 4 || checkAccountNumber.getText().length() > 17){
            error("Check Account number must be all numbers and a length of from 4 to 17 digits");
            return;
        }
        
        this.order.setStatus(OrderStatus.PENDING);
        
        double change = totalGiven - total;
        JOptionPane.showMessageDialog(this, "Thank you for the payment the change is: " + String.format("$%.2f", change) + ". The order was placed");

        dispose();
    }//GEN-LAST:event_checkSubmitActionPerformed

    private void creditSubmitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_creditSubmitActionPerformed
        if(creditCardName.getText().isEmpty()){
            error("Name must be entered in from card");
            return;
        }
        
        if(creditCardNumber.getText().isEmpty()){
            error("Credit Card number must be entered in from card");
            return;
        }
        
        if(!isNumber(creditCardNumber.getText()) || creditCardNumber.getText().length() != 16){
            error("Credit Card number must be all numbers and a length of 16 digits");
            return;
        }
        
        if(creditCity.getText().isEmpty()){
            error("City must be entered in for billing purposes");
            return;
        }
        
        if(creditSecurityCode.getText().isEmpty()){
            error("Secuirty code must be entered in from card");
            return;
        }
        
        if(!isNumber(creditSecurityCode.getText()) || creditSecurityCode.getText().length() < 3 || creditSecurityCode.getText().length() > 4){
            error("Credit Card security number must be all numbers and a length of 3 or 4 digits depending on the type of card you have");
            return;
        }
        
        if(creditZipCode.getText().isEmpty()){
            error("Zip code must be entered in for billing purposes");
            return;
        }
        
        if(creditBillingAddress.getText().isEmpty()){
            error("Address must be entered in for billing purposes");
            return;
        }
        
        String monthExpiration = creditMonthExpiration.getSelectedItem().toString();
        String yearExpiration = creditYearExpiration.getSelectedItem().toString();
        if((!monthExpiration.equals("11") && !monthExpiration.equals("11") && !monthExpiration.equals("11")) && yearExpiration.equals("2014")){
            error("Card has already expired");
            return;
        }
        
        this.order.setStatus(OrderStatus.PENDING);
        
        JOptionPane.showMessageDialog(this, "Thank you for the payment, the order was placed");

        dispose();
    }//GEN-LAST:event_creditSubmitActionPerformed

    private void cashSubmitActionPerformed(ActionEvent evt) {//GEN-FIRST:event_cashSubmitActionPerformed
        double totalGiven = (double) cashTotalGiven.getValue();
        
        if(totalGiven <= 0){
            error("Cash total must bigger than 0");
            return;
        }
        
        if(totalGiven < this.total){
            error("Cash total not enough for the total");
            return;
        }
        
        this.order.setStatus(OrderStatus.PENDING);
        
        double change = totalGiven - total;
        JOptionPane.showMessageDialog(this, "Thank you for the payment the change is: " + String.format("$%.2f", change) + ". The order was placed");
        
        dispose();
    }//GEN-LAST:event_cashSubmitActionPerformed

    public boolean isNumber(String number) { 
        for(int i = 0; i<number.length(); i++ ){
            if(!Character.isDigit(number.charAt(i))){
                return false;
            }
        }
        return true;
    } 
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(PaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(PaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(PaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(PaymentDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				PaymentDialog dialog = new PaymentDialog(new javax.swing.JFrame(), null, new Order(), 20.1);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton cashSubmit;
    private JSpinner cashTotalGiven;
    private JTextField checkAccountNumber;
    private JTextField checkName;
    private JTextField checkNumber;
    private JTextField checkRouting;
    private JButton checkSubmit;
    private JLabel checkTotal;
    private JSpinner checkTotalGiven;
    private JTextField creditBillingAddress;
    private JTextField creditCardName;
    private JTextField creditCardNumber;
    private JTextField creditCity;
    private JComboBox creditMonthExpiration;
    private JTextField creditSecurityCode;
    private JButton creditSubmit;
    private JLabel creditTotalDue;
    private JComboBox creditYearExpiration;
    private JTextField creditZipCode;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private JLabel jLabel15;
    private JLabel jLabel16;
    private JLabel jLabel18;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JPanel jPanel5;
    private JSpinner jSpinner1;
    private JSpinner jSpinner3;
    private JTabbedPane jTabbedPane1;
    private JTextField jTextField1;
    private JTextField jTextField5;
    private JLabel totalDueCash;
    private JLabel totalField;
    private JLabel totalField1;
    private JLabel totalLabel;
    private JLabel totalLabel1;
    // End of variables declaration//GEN-END:variables
}
