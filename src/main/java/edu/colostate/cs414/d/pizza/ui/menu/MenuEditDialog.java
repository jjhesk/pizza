package edu.colostate.cs414.d.pizza.ui.menu;

import edu.colostate.cs414.d.pizza.Kiosk;
import edu.colostate.cs414.d.pizza.api.menu.MenuItem;
import edu.colostate.cs414.d.pizza.ui.event.MenuItemCreateEvent;
import edu.colostate.cs414.d.pizza.ui.event.MenuItemEditEvent;
import edu.colostate.cs414.d.pizza.ui.event.MenuItemRemoveEvent;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.LayoutStyle;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.timothyb89.eventbus.EventHandler;
import org.timothyb89.eventbus.EventScanMode;
import org.timothyb89.eventbus.EventScanType;

@EventScanMode(type = EventScanType.EXTENDED)
public class MenuEditDialog extends JDialog {

    private final Logger logger = LoggerFactory.getLogger(MenuEditDialog.class);
    
	private final Kiosk kiosk;
    
	/**
	 * Creates new form MenuEditDialog
	 */
	public MenuEditDialog(Frame parent, Kiosk kiosk) {
		super(parent, true);
		
		this.kiosk = kiosk;
		
		initComponents();
		initMenu();
		
        closeButton.requestFocusInWindow();
        
		setLocationRelativeTo(parent);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        closeButton = new JButton();
        menuWrapper = new JPanel();
        newMenuButton = new JButton();
        specialsButton = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Menu");

        closeButton.setText("Close");
        closeButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        menuWrapper.setPreferredSize(new Dimension(400, 449));
        menuWrapper.setLayout(new BorderLayout());

        newMenuButton.setText("New Menu");
        newMenuButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                newMenuButtonActionPerformed(evt);
            }
        });

        specialsButton.setText("Specials...");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newMenuButton)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specialsButton)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addContainerGap())
            .addComponent(menuWrapper, GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(menuWrapper, GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(newMenuButton)
                    .addComponent(specialsButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void newMenuButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_newMenuButtonActionPerformed
        int ret = JOptionPane.showOptionDialog(this,
                "Creating a new menu will remove all current menu items."
                        + " Really continue?",
                "Confirm",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null, null, null);
        
        if (ret == JOptionPane.YES_OPTION) {
            kiosk.clearMenu();
            menuPanel.refreshMenuItems(new ArrayList<MenuItem>());
        }
    }//GEN-LAST:event_newMenuButtonActionPerformed

	private void initMenu() {
		menuPanel = new MenuPanel(kiosk.viewMenu(), MenuFeature.ADMIN, 2);
		menuPanel.bus().register(this);
		
		menuWrapper.add(menuPanel, BorderLayout.CENTER);
	}
	
	@EventHandler
	private void doMenuItemCreated(MenuItemCreateEvent event) {
		kiosk.addMenuItem(event.getItem());
		
        logger.debug("Menu item created: {}", event.getItem());
        
		//delayedRefreshMenu();
	}
	
	@EventHandler
	private void doMenuItemEdited(MenuItemEditEvent event) {
		kiosk.removeMenuItem(event.getOriginalItem());
		kiosk.addMenuItem(event.getNewItem());
		
        logger.debug("Menu item edited: {}", event.getNewItem());
        
		//delayedRefreshMenu();
	}
	
	@EventHandler
	private void doMenuItemRemoved(MenuItemRemoveEvent event) {
		kiosk.removeMenuItem(event.getItem());
		
        logger.debug("Menu item removed: {}", event.getItem());
        
        //delayedRefreshMenu();
	}
    
    private void delayedRefreshMenu() {
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                menuPanel.refreshMenuItems(kiosk.viewMenu());
            }
            
        });
    }

	private MenuPanel menuPanel;
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton closeButton;
    private JPanel menuWrapper;
    private JButton newMenuButton;
    private JButton specialsButton;
    // End of variables declaration//GEN-END:variables
}
