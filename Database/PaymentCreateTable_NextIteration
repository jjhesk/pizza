CREATE TABLE User (
	userID int NOT NULL AUTO_INCREMENT,
	name varchar(255) NOT NULL,
	PRIMARY KEY (userID)
);


CREATE TABLE MenuItem (
	menuItemID int NOT NULL AUTO_INCREMENT,
	price float NOT NULL,
	description varchar(255),
	status ENUM('active', 'expired') NOT NULL,
	PRIMARY KEY (menuItemID)
);

CREATE TABLE Payment(
        paymentID int NOT NULL AUTO_INCREMENT,
        PRIMARY KEY (paymentID)
);

CREATE TABLE UserOrder (
	orderID int NOT NULL AUTO_INCREMENT,
	customerAddress varchar(255),
        status ENUM('new', 'active', 'cancelled', 'complete'),
	type ENUM('delivery', 'pickup', 'eatin'),
	total float,	
        paymentID int,
	userID int,
        FOREIGN KEY (paymentID) REFERENCES Payment(paymentID),
	FOREIGN KEY (userID) REFERENCES User(userID),
	PRIMARY KEY (orderID)
);


CREATE TABLE PaymentCheck(
	checkID int NOT NULL AUTO_INCREMENT,
	checkNumber int,
	bank varchar(255),
	paymentID int,
	FOREIGN KEY (paymentID) REFERENCES Payment(paymentID),
	PRIMARY KEY(checkID)
);

CREATE TABLE PaymentCashs(
        cashID int NOT NULL AUTO_INCREMENT,
	amountGiven float,
	change float,
        paymentID int,
        FOREIGN KEY (paymentID) REFERENCES Payment(paymentID),
        PRIMARY KEY(cashID)
);

CREATE TABLE PaymentCard(
        cardID int NOT NULL AUTO_INCREMENT,
	cardHolderName varchar(255),
	expirationDate varchar(255),
	cardNumber int,
	securityNumber int,
        paymentID int,
        FOREIGN KEY (paymentID) REFERENCES Payment(paymentID),
        PRIMARY KEY(cardID)
);

CREATE TABLE OrderItem (
	orderItemID int NOT NULL AUTO_INCREMENT,
	quantity varchar(255) NOT NULL,
	menuItemID int,
	orderID int,
	FOREIGN KEY (menuItemID) REFERENCES MenuItem(menuItemID),
	FOREIGN KEY (orderID) REFERENCES UserOrder(orderID),
	PRIMARY KEY (orderItemID)
);


CREATE TABLE DailySpecial (
	dailySpecialID int NOT NULL AUTO_INCREMENT,
	status ENUM('active', 'expired') NOT NULL,
	PRIMARY KEY (dailySpecialID)
);


CREATE TABLE DailySpecialItem (
	dailySpecialItemID int NOT NULL AUTO_INCREMENT,
	dailySpecialID int,
	menuItemID int,
	FOREIGN KEY (menuItemID) REFERENCES MenuItem(menuItemID),
        FOREIGN KEY (dailySpecialID) REFERENCES DailySpecial(dailySpecialID),
        PRIMARY KEY (dailySpecialItemID)
);
